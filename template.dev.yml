AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Combined SAM template for HRMS Notification Dev functions and TESTNotificationService.

Globals:
  Function:
    Runtime: nodejs20.x
    MemorySize: 1024
    Timeout: 29
    Environment:
      Variables:
        SQS_QUEUE_URL: !Ref NotificationDevQueue
        SNS_CREATE_NOTIFICATION_TOPIC: !Ref SnsTopicCreateNotificationARN
        SNS_BROADCAST_TOPIC_ARN: !Ref SnsTopicBroadcastNotificationARN
        DB_NOTIFICATION: !Ref NotificationDB
        DB_EMPLOYEE: !Ref EmployeeDB
        DB_VACANCY: !Ref VacancyDB
        DB_WS_CONNECTION: !Ref ConnectionDB
        DB_CANDIDATE: !Ref CandidateDB
        ATLAS_ACCESS: !Ref AtlasAccess

Parameters:
  StageEnv:
    Type: String
    Default: dev
  AtlasAccess:
    Type: String
  VPCSecurityGroup:
    Type: String
  VPCSubnet1:
    Type: String
  VPCSubnet2:
    Type: String
  AuthorizerARN:
    Type: String
  NotificationDB:
    Type: String
  EmployeeDB:
    Type: String
  VacancyDB:
    Type: String
  ConnectionDB:
    Type: String
  CandidateDB:
    Type: String
  SnsTopicBroadcastNotificationARN:
    Type: String
  SnsTopicCreateNotificationARN:
    Type: String

Resources:
  # SQS Queue
  NotificationDevQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: doCreateNotification_dev_queue

  # SQS Queue Policy
  NotificationDevQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref NotificationDevQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 'sqs:SendMessage'
            Resource: !GetAtt NotificationDevQueue.Arn
            Condition:
              ArnEquals:
                'aws:SourceArn': !Ref SnsTopicCreateNotificationARN

  # SNS Topic Subscription
  NotificationDevTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !Ref SnsTopicCreateNotificationARN
      Endpoint: !GetAtt NotificationDevQueue.Arn

  # API Gateway
  HRMSNotificationDevAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageEnv
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: CoreAuthorizer
        Authorizers:
          CoreAuthorizer:
            FunctionPayloadType: REQUEST
            FunctionArn: !Ref AuthorizerARN
            Identity:
              Headers:
                - Authorization
              ReauthorizeEvery: 0
        AddDefaultAuthorizerToCorsPreflight: False

  # Lambda Function for HRMS
  HRMSNotificationDevLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/lambda.handler
      CodeUri: ./.serverless/build/app.zip
      Policies:
        - arn:aws:iam::730335295088:policy/LambdaWithPrivateLinkExecutionRole
      VpcConfig:
        SecurityGroupIds:
          - !Ref VPCSecurityGroup
        SubnetIds:
          - !Ref VPCSubnet1
          - !Ref VPCSubnet2
      AutoPublishAlias: !Ref StageEnv
      SnapStart:
        ApplyOn: None
      Events:
        RestApiEvents:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref HRMSNotificationDevAPI

  # Lambda Function for SQS
  SQSHandlerDevFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/notification-builder/sqs.handler
      CodeUri: ./.serverless/build/app.zip
      VpcConfig:
        SecurityGroupIds:
          - !Ref VPCSecurityGroup
        SubnetIds:
          - !Ref VPCSubnet1
          - !Ref VPCSubnet2
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !Ref NotificationDevQueue
        - Statement:
            Effect: Allow
            Action: 'sns:Publish'
            Resource:
              - !Ref SnsTopicCreateNotificationARN
              - !Ref SnsTopicBroadcastNotificationARN
      Events:
        SQSQueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt NotificationDevQueue.Arn
            BatchSize: 5

Outputs:
  HRMSNotificationDevEndpoint:
    Description: API Gateway HRMS Notification Dev
    Value:
      Fn::Sub: https://${HRMSNotificationDevAPI}.execute-api.${AWS::Region}.amazonaws.com/${StageEnv}/

  QueueUrl:
    Description: URL of the SQS Queue
    Value: !Ref NotificationDevQueue
    Export:
      Name: NotificationDevQueueUrl

  QueueArn:
    Description: ARN of the SQS Queue
    Value: !GetAtt NotificationDevQueue.Arn
    Export:
      Name: NotificationDevQueueArn

  TopicArn:
    Description: ARN of the SNS Topic
    Value: !Ref SnsTopicCreateNotificationARN
    Export:
      Name: NotificationTopicArn
